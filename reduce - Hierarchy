const filterHMOenroll = [
    {
        "HierarchyPosition": 2,
        "DependentNumber": "2111059201",
        "FirstName": "Juan",
        "MiddleName": "",
        "LastName": "COE",
        "Relationship": "Father",
        "Gender": "Male",
        "CivilStatus": "Married",
        "BirthDate": "1956/05/01"
    },
    {
        "HierarchyPosition": 2,
        "DependentNumber": "2111059302",
        "FirstName": "Juana",
        "MiddleName": "",
        "LastName": "COE",
        "Relationship": "Mother",
        "Gender": "Female",
        "CivilStatus": "Married",
        "BirthDate": "1959/05/01"
    },
    {
        "HierarchyPosition": 3,
        "DependentNumber": "2111059901",
        "FirstName": "HALF SIBLING",
        "MiddleName": "",
        "LastName": "COE",
        "Relationship": "Half sibling",
        "Gender": "Female",
        "CivilStatus": "Single",
        "BirthDate": "2001/04/03"
    }
]

const dependents = [
   
    // {
    //     "HierarchyPosition": 2,
    //     "DependentNumber": "2111059201",
    //     "FirstName": "FATHER",
    //     "MiddleName": "",
    //     "LastName": "COE",
    //     "Relationship": "Father",
    //     "Gender": "Male",
    //     "CivilStatus": "Married",
    //     "BirthDate": "1956/05/01",
    //     "SubType": null,
    //     "MaximumAge": 0,
    //     "IsSpecialCase": false
    // },
     {
        "HierarchyPosition": 3,
        "DependentNumber": "2111059901",
        "FirstName": "HALFÂ SIBLING",
        "MiddleName": "",
        "LastName": "COE",
        "Relationship": "Half Sibling",
        "Gender": "Female",
        "CivilStatus": "Single",
        "BirthDate": "4/3/2001",
        "SubType": null,
        "MaximumAge": 0,
        "IsSpecialCase": false
    },
    {
        "HierarchyPosition": 2,
        "DependentNumber": "2111059302",
        "FirstName": "MOTHER",
        "MiddleName": "",
        "LastName": "COE",
        "Relationship": "Mother",
        "Gender": "Female",
        "CivilStatus": "Married",
        "BirthDate": "1959/05/01",
        "SubType": null,
        "MaximumAge": 0,
        "IsSpecialCase": false
    },
]

var validDependents = [];

  var sortedDeps =  dependents.sort((a, b) => a.HierarchyPosition - b.HierarchyPosition)

  
validDependents = sortedDeps.reduce((acc, cur, index) => {
    //console.log(cur);
    var chkHierarchyDeps = filterHMOenroll.some(dep => 
        dep.Relationship.toLowerCase() === cur.Relationship.toLowerCase() && cur.DependentNumber === dep.DependentNumber)
    //console.log(cur,chkHierarchyDeps)
    if (chkHierarchyDeps) {
        //3 variations
        var chkIndex = filterHMOenroll.findIndex(x => cur.DependentNumber === x.DependentNumber && cur.HierarchyPosition === x.HierarchyPosition)
        //var chkIndex = filterHMOenroll.map(x => { return x.HierarchyPosition}).indexOf(cur.HierarchyPosition)
        // var chkIndex;
        // var checker = filterHMOenroll.some(function(entry, i) {
        //     if (entry.HierarchyPosition == cur.HierarchyPosition && cur.DependentNumber === entry.DependentNumber) {
        //         chkIndex = i;
        //         return i;
        //     }
        // });
        console.log(chkIndex)
        if (index === chkIndex){
            acc.push(true);
        } else {
            acc.push(false)
        }
    } else {
        acc.push(false)
    }
 
    return acc
}, [])

var chkIfValid = validDependents.some(valid => !valid)

console.log(validDependents, chkIfValid)

//check if chkIfValid has a false value
